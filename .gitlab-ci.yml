image: registry.gitcity.eu/gitcity-sk/gitcity-build-images:php-7.2-fpm

# Environment variables setting
.default-variables: &default-variables
    DB_PASSWORD: 2GXmdmHXg9NmxKsCSbun
    DB_NAME: cakephp
    DB_TEST_NAME: cakephp

# For Postgres DB
.postgres-variables: &postgres-variables
    variables:
        <<: *default-variables
        APP_DB_DRIVER: "Cake\\Database\\Driver\\Postgres"
        DB_HOST: postgres
        DB_PORT: 5432
        DB_USER: postgres
        # Setup for postgres image
        POSTGRES_PASSWORD: 2GXmdmHXg9NmxKsCSbun
        POSTGRES_DB: cakephp

# For MariaDB
.mariadb-variables: &mariadb-variables
    variables:
        <<: *default-variables
        APP_DB_DRIVER: "Cake\\Database\\Driver\\Mysql"
        DB_HOST: mariadb
        DB_PORT: 3306
        DB_USER: cakephp
        # Setup for mysql
        MYSQL_USER: cakephp
        MYSQL_DATABASE: cakephp
        MYSQL_PASSWORD: 2GXmdmHXg9NmxKsCSbun
        MYSQL_ROOT_PASSWORD: 2GXmdmHXg9NmxKsCSbun


# Cache vendor directory
.default-cache: &default-cache
    key: "cake-app-with-php-7"
    paths:
        - vendor/

# push cache
.push-cache: &push-cache
    cache:
        <<: *default-cache
        policy: push

# pull cache
.pull-cache: &pull-cache
    cache:
        <<: *default-cache
        policy: pull

stages:
    - build
    - prepare
    - test
    - post-test
    - pages
    - deploy

# Install all dependencies
.install-dependencies: &install-dependencies
    - docker-php-ext-install intl
    - composer -V
    - composer install --no-ansi --no-interaction --no-progress
    - chmod a+x bin/cake

# PHP Lint script using CakePHP coding standards
.php-lint: &php-lint
    - composer require cakephp/cakephp-codesniffer:dev-master
    - chmod +x vendor/bin/phpcs
    - vendor/bin/phpcs --ignore=*/Migrations/* -p --extensions=php --standard=vendor/cakephp/cakephp-codesniffer/CakePHP ./src ./tests ./config ./plugins

.php-sast: &php-sast
    - composer require pheromone/phpcs-security-audit
    - sh vendor/pheromone/phpcs-security-audit/symlink.sh
    - vendor/bin/phpcs --ignore=*/Migrations/* -p --extensions=php,inc,lib,module,info --standard=./vendor/pheromone/phpcs-security-audit/example_base_ruleset.xml ./src ./tests ./config ./plugins

.run-on-do-docker: &run-on-do-docker
    tags:
        - digitalocean
        - docker

.phpunit-tests-coverage-text: &phpunit-tests-coverage-text
    script:
        - ./vendor/bin/phpunit --coverage-text --colors=never
    artifacts:
        when: on_failure
        paths:
        - logs
        expire_in: 1 week

.phpunit-html-coverage: &phpunit-html-coverage
    stage: pages
    environment:
        name: code-coverage/$CI_COMMIT_REF_NAME
        url: http://$CI_PROJECT_NAMESPACE.gitcity.io/$CI_PROJECT_NAME/$CI_COMMIT_REF_SLUG/coverage/
    script:
        - ./vendor/bin/phpunit --coverage-html ./public/$CI_COMMIT_REF_SLUG/coverage
    artifacts:
        paths:
        - public


# Prepare Section
# -----------------------------------
setup-cakeapp:
    <<: *push-cache
    stage: prepare
    script: *install-dependencies
    <<: *run-on-do-docker

# Post-Test section
# -----------------------------------

# Lint
php lint:
    <<: *pull-cache
    stage: post-test
    before_script: *install-dependencies
    script: *php-lint
    allow_failure: true
    <<: *run-on-do-docker

php sast:
    <<: *pull-cache
    stage: post-test
    before_script: *install-dependencies
    script: *php-sast
    allow_failure: true
    <<: *run-on-do-docker

# Build
# -----------------------------------

build master image:
    image: docker:latest
    services:
        - docker:dind
    stage: build
    before_script:
        - echo "$CI_JOB_TOKEN" | docker login -u "gitlab-ci-token" "$CI_REGISTRY" --password-stdin
    script:
        - docker build --pull -t "$CI_REGISTRY_IMAGE" .
        - docker push "$CI_REGISTRY_IMAGE"
    <<: *run-on-do-docker
    only:
        - master
    when: manual

build image:
    image: docker:latest
    services:
        - docker:dind
    stage: build
    before_script:
        - echo "$CI_JOB_TOKEN" | docker login -u "gitlab-ci-token" "$CI_REGISTRY" --password-stdin
    script:
        - docker build --pull -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME" .
        - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME"
    <<: *run-on-do-docker
    except:
        - master
    when: manual

# Test section
# -----------------------------------

# PHP Unit test
php phpunit mariadb:
    <<: *pull-cache
    <<: *mariadb-variables
    stage: test
    services:
        - redis
        - mariadb
    before_script: *install-dependencies
    <<: *phpunit-tests-coverage-text
    <<: *run-on-do-docker

php phpunit postgres:
    <<: *pull-cache
    <<: *postgres-variables
    stage: test
    services:
        - redis
        - postgres
    before_script: *install-dependencies
    <<: *phpunit-tests-coverage-text
    <<: *run-on-do-docker
    allow_failure: true
    
# Pages
# -----------------------------------

pages:
    <<: *pull-cache
    <<: *postgres-variables
    services:
        - redis
        - postgres
    before_script: *install-dependencies
    <<: *phpunit-html-coverage
    <<: *run-on-do-docker
